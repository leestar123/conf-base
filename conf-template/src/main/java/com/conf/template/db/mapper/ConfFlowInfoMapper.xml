<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.conf.template.db.mapper.ConfFlowInfoMapper">
  <resultMap id="BaseResultMap" type="com.conf.template.db.model.ConfFlowInfo">
    <id column="flow_id" jdbcType="INTEGER" property="flowId" />
    <result column="step_id" jdbcType="INTEGER" property="stepId" />
    <result column="flow_name" jdbcType="VARCHAR" property="flowName" />
    <result column="flow_path" jdbcType="VARCHAR" property="flowPath" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="teller" jdbcType="VARCHAR" property="teller" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="org" jdbcType="VARCHAR" property="org" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="delete_flag" jdbcType="INTEGER" property="deleteFlag" />
  </resultMap>
  <sql id="Base_Column_List">
    flow_id, step_id, flow_name, flow_path, remark, teller, org, create_time, update_time, delete_flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from conf_flow_info
    where flow_id = #{flowId,jdbcType=INTEGER}
  </select>
  <select id="selectByStep" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from conf_flow_info
    where step_id = #{stepId,jdbcType=INTEGER}
  </select>
  <select id="selectBySelective" parameterType="com.conf.template.db.model.ConfFlowInfo" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from conf_flow_info
    <where>
      <if test="stepId != null">
        and step_id = #{stepId,jdbcType=INTEGER},
      </if>
      <if test="flowName != null">
        and flow_name = #{flowName,jdbcType=VARCHAR},
      </if>
      <if test="flowPath != null">
        and flow_path = #{flowPath,jdbcType=VARCHAR},
      </if>
      <if test="teller != null">
        and teller = #{teller,jdbcType=VARCHAR},
      </if>
      <if test="org != null">
        and org = #{org,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        and delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from conf_flow_info
    where flow_id = #{flowId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.conf.template.db.model.ConfFlowInfo">
    insert into conf_flow_info (flow_id, step_id, flow_name, 
      flow_path, remark, teller, 
      org, create_time, update_time
      )
    values (#{flowId,jdbcType=INTEGER}, #{stepId,jdbcType=INTEGER}, #{flowName,jdbcType=VARCHAR}, 
      #{flowPath,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{teller,jdbcType=VARCHAR}, 
      #{org,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.conf.template.db.model.ConfFlowInfo">
     <selectKey resultType="java.lang.Integer" keyProperty="flowId" order="AFTER">
   		SELECT LAST_INSERT_ID()
     </selectKey>
    insert into conf_flow_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="flowId != null">
        flow_id,
      </if>
      <if test="stepId != null">
        step_id,
      </if>
      <if test="flowName != null">
        flow_name,
      </if>
      <if test="flowPath != null">
        flow_path,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="teller != null">
        teller,
      </if>
      <if test="org != null">
        org,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="flowId != null">
        #{flowId,jdbcType=INTEGER},
      </if>
      <if test="stepId != null">
        #{stepId,jdbcType=INTEGER},
      </if>
      <if test="flowName != null">
        #{flowName,jdbcType=VARCHAR},
      </if>
      <if test="flowPath != null">
        #{flowPath,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="teller != null">
        #{teller,jdbcType=VARCHAR},
      </if>
      <if test="org != null">
        #{org,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.conf.template.db.model.ConfFlowInfo">
    update conf_flow_info
    <set>
      <if test="stepId != null">
        step_id = #{stepId,jdbcType=INTEGER},
      </if>
      <if test="flowName != null">
        flow_name = #{flowName,jdbcType=VARCHAR},
      </if>
      <if test="flowPath != null">
        flow_path = #{flowPath,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="teller != null">
        teller = #{teller,jdbcType=VARCHAR},
      </if>
      <if test="org != null">
        org = #{org,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
     	delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
    </set>
    where flow_id = #{flowId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.conf.template.db.model.ConfFlowInfo">
    update conf_flow_info
    set step_id = #{stepId,jdbcType=INTEGER},
      flow_name = #{flowName,jdbcType=VARCHAR},
      flow_path = #{flowPath,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      teller = #{teller,jdbcType=VARCHAR},
      org = #{org,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=INTEGER}
    where flow_id = #{flowId,jdbcType=INTEGER}
  </update>
</mapper>