<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.conf.template.db.mapper.ConfInvokInfoMapper">
  <resultMap id="BaseResultMap" type="com.conf.template.db.model.ConfInvokInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="service" jdbcType="VARCHAR" property="service" />
    <result column="request" jdbcType="VARCHAR" property="request" />
    <result column="success" jdbcType="INTEGER" property="success" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="teller" jdbcType="VARCHAR" property="teller" />
    <result column="org" jdbcType="VARCHAR" property="org" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="error_message" jdbcType="VARCHAR" property="errorMessage" />
  </resultMap>
  <sql id="Base_Column_List">
    id, service, request, success, detail, teller, org, create_date, update_time, error_message
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from conf_invok_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from conf_invok_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.conf.template.db.model.ConfInvokInfo">
    insert into conf_invok_info (id, service, request, 
      success, detail, teller, 
      org, create_date, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{service,jdbcType=VARCHAR}, #{request,jdbcType=VARCHAR}, 
      #{success,jdbcType=INTEGER}, #{detail,jdbcType=VARCHAR}, #{teller,jdbcType=VARCHAR}, 
      #{org,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.conf.template.db.model.ConfInvokInfo">
    insert into conf_invok_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="service != null">
        service,
      </if>
      <if test="request != null">
        request,
      </if>
      <if test="success != null">
        success,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="teller != null">
        teller,
      </if>
      <if test="org != null">
        org,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="errorMessage != null">
        error_message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="service != null">
        #{service,jdbcType=VARCHAR},
      </if>
      <if test="request != null">
        #{request,jdbcType=VARCHAR},
      </if>
      <if test="success != null">
        #{success,jdbcType=INTEGER},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="teller != null">
        #{teller,jdbcType=VARCHAR},
      </if>
      <if test="org != null">
        #{org,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
       <if test="errorMessage != null">
        #{errorMessage,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.conf.template.db.model.ConfInvokInfo">
    update conf_invok_info
    <set>
      <if test="service != null">
        service = #{service,jdbcType=VARCHAR},
      </if>
      <if test="request != null">
        request = #{request,jdbcType=VARCHAR},
      </if>
      <if test="success != null">
        success = #{success,jdbcType=INTEGER},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="teller != null">
        teller = #{teller,jdbcType=VARCHAR},
      </if>
      <if test="org != null">
        org = #{org,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.conf.template.db.model.ConfInvokInfo">
    update conf_invok_info
    set service = #{service,jdbcType=VARCHAR},
      request = #{request,jdbcType=VARCHAR},
      success = #{success,jdbcType=INTEGER},
      detail = #{detail,jdbcType=VARCHAR},
      teller = #{teller,jdbcType=VARCHAR},
      org = #{org,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectTotalRecord" resultType="java.lang.Integer">
  	select count(1) from conf_invok_info t
  	<where>
	  <if test="service != null">
	        and t.service like '%${service}%' 
	   </if>
   	</where>
  </select>
  <select id="selectRecordWithPage" resultMap="BaseResultMap">
  	select t.* from conf_invok_info t
  	<where>
	  <if test="service != null">
	        and t.service like '%${service}%' 
	   </if>
   	</where>  
   	order by t.id desc
   	limit #{pageNum},#{pageSize}
  </select>
  
</mapper>