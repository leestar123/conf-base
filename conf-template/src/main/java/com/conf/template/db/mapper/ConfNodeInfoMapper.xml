<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.conf.template.db.mapper.ConfNodeInfoMapper">
  <resultMap id="BaseResultMap" type="com.conf.template.db.model.ConfNodeInfo">
    <id column="node_id" jdbcType="INTEGER" property="nodeId" />
    <result column="node_name" jdbcType="VARCHAR" property="nodeName" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="node_type" jdbcType="VARCHAR" property="nodeType" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="teller" jdbcType="VARCHAR" property="teller" />
    <result column="org" jdbcType="VARCHAR" property="org" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="delete_flag" jdbcType="INTEGER" property="deleteFlag" />    
  </resultMap>
  <sql id="Base_Column_List">
    node_id, node_name, remark, node_type, version, teller, org, create_time, update_time, delete_flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from conf_node_info
    where node_id = #{nodeId,jdbcType=INTEGER}
  </select>
  
  <select id="queryCount" resultType="java.lang.Integer">
  select count(1) from conf_node_info t
  <where>
	  <if test="nodeName!=null and nodeName!=''">
	        and t.node_name like '%${nodeName}%' 
	   </if>
	   <if test="nodeType!=null and nodeType!=''">
	        and t.node_type = #{nodeType}
	   </if>
	   and t.delete_flag = 0
   </where>
  </select>
  
  <select id="queryNodeList" resultMap="BaseResultMap">
  select t.* from conf_node_info t
  <where>
	  <if test="nodeName != null and nodeName != ''">
	        and t.node_name like '%${nodeName}%'
	   </if>
	   <if test="nodeType != null and nodeType != ''">
	        and t.node_type = #{nodeType}
	   </if>
	   and t.delete_flag = 0
   </where>  
   order by t.node_id desc
   limit #{startNum},#{pageSize}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from conf_node_info
    where node_id = #{nodeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.conf.template.db.model.ConfNodeInfo">
    insert into conf_node_info (node_name, remark, 
      node_type, version, teller, 
      org)
     #{nodeName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{nodeType,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, #{teller,jdbcType=VARCHAR}, 
      #{org,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.conf.template.db.model.ConfNodeInfo">
   <selectKey resultType="java.lang.Integer" keyProperty="nodeId" order="AFTER">
   		SELECT LAST_INSERT_ID()
   </selectKey>
    insert into conf_node_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nodeName != null">
        node_name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="nodeType != null">
        node_type,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="teller != null">
        teller,
      </if>
      <if test="org != null">
        org,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nodeName != null">
        #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="nodeType != null">
        #{nodeType,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="teller != null">
        #{teller,jdbcType=VARCHAR},
      </if>
      <if test="org != null">
        #{org,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.conf.template.db.model.ConfNodeInfo">
    update conf_node_info
    <set>
      <if test="nodeName != null">
        node_name = #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="nodeType != null">
        node_type = #{nodeType,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="teller != null">
        teller = #{teller,jdbcType=VARCHAR},
      </if>
      <if test="org != null">
        org = #{org,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
    </set>
    where node_id = #{nodeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.conf.template.db.model.ConfNodeInfo">
    update conf_node_info
    set node_name = #{nodeName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      node_type = #{nodeType,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      teller = #{teller,jdbcType=VARCHAR},
      org = #{org,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=INTEGER}
    where node_id = #{nodeId,jdbcType=INTEGER}
  </update>
  
  <select id="queryNodeByProduct" resultMap="BaseResultMap">
  select m.*
    from conf_product_node t left join conf_node_info m 
    on t.node_id = m.node_id and m.delete_flag = 0
    where t.product_id = #{productId} and t.delete_flag = 0
    group by t.node_id
    limit #{startNum},#{pageSize}  
   </select>
   
   <select id="queryNodeCountByProduct" resultType="java.lang.Integer">
  select count(distinct(t.node_id))
    from conf_product_node t left join conf_node_info m 
    on t.node_id = m.node_id and m.delete_flag = 0
    where t.product_id = #{productId} and t.delete_flag = 0
   </select>

	<select id="queryNodeByProducts" resultMap="BaseResultMap">
		select m.* from (
		select distinct(node_id) from conf_product_node 
		where product_id = #{productId} and delete_flag = 0
		) t left join conf_node_info m
		on t.node_id = m.node_id and m.delete_flag = 0
	</select>
	
	<select id="queryNodeByStep" resultMap="BaseResultMap">
		select n.* from conf_step_info t
		left join conf_node_info n on t.node_id = n.node_id
		where t.step_id = #{stepId}
	</select>
	
	<select id="queryNodeNameByStepId" resultType="java.lang.String">
		select ni.node_name from conf_step_info si, conf_node_info ni 
		<where>
		  si.node_id = ni.node_id 
		  <if test="stepId != null and stepId != ''">
		        and si.step_id = #{stepId}#
		   </if>
		   and si.delete_flag = 0
	   </where>  
   </select>
	
</mapper>