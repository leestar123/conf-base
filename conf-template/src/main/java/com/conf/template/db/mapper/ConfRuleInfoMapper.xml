<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.conf.template.db.mapper.ConfRuleInfoMapper">
  <resultMap id="BaseResultMap" type="com.conf.template.db.model.ConfRuleInfo">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="rule_name" jdbcType="VARCHAR" property="ruleName" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="clazz" jdbcType="VARCHAR" property="clazz" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="param" jdbcType="VARCHAR" property="param" />
    <result column="version" jdbcType="VARCHAR" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from conf_rule_info
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <select id="selectRecordList"  resultMap="BaseResultMap">
  select m.*
    from conf_product_node t left join conf_rule_info m 
    on t.uid = m.uid
    where t.product_id = #{productId}
    and t.node_id = #{nodeId}   
  </select>
  
  <select id="selectRecordListByPage"  resultMap="BaseResultMap">
  select o.* from (select m.*
    from conf_product_node t left join conf_rule_info m 
    on t.uid = m.uid
    where t.node_id = #{nodeId}) o 
    limit #{startNum},#{endNum}  
  </select>
  
  <select id="queryCountByNodeId" resultType="java.lang.Integer">
  select count(1)
    from conf_product_node t left join conf_rule_info m 
    on t.uid = m.uid
    where t.node_id = #{nodeId}
  </select>
  
  <select id="queryRuleListByName"  resultMap="BaseResultMap">
 	select m.*
    from  conf_rule_info m 
    <if test="ruleName != null">
   	 where m.rule_name like '%${ruleName}%'
    </if> 
    limit #{startNum},#{endNum}  
  </select>
  
  <select id="queryCountByName"  resultType="java.lang.Integer">
 	select count(1)
    from  conf_rule_info m 
    <if test="ruleName != null">
   	 where m.rule_name like '%${ruleName}%'  
   	</if>
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from conf_rule_info
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.conf.template.db.model.ConfRuleInfo">
    insert into conf_rule_info (uid, rule_name, remark, 
      clazz, method, param, 
      version)
    values (#{uid,jdbcType=INTEGER}, #{ruleName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{clazz,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, #{param,jdbcType=VARCHAR}, 
      #{version,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.conf.template.db.model.ConfRuleInfo">
    insert into conf_rule_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="ruleName != null">
        rule_name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="clazz != null">
        clazz,
      </if>
      <if test="method != null">
        method,
      </if>
      <if test="param != null">
        param,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="ruleName != null">
        #{ruleName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="clazz != null">
        #{clazz,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="param != null">
        #{param,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.conf.template.db.model.ConfRuleInfo">
    update conf_rule_info
    <set>
      <if test="ruleName != null">
        rule_name = #{ruleName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="clazz != null">
        clazz = #{clazz,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="param != null">
        param = #{param,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.conf.template.db.model.ConfRuleInfo">
    update conf_rule_info
    set rule_name = #{ruleName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      clazz = #{clazz,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      param = #{param,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>