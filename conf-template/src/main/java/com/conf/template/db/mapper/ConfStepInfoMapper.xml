<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.conf.template.db.mapper.ConfStepInfoMapper">
  <resultMap id="BaseResultMap" type="com.conf.template.db.model.ConfStepInfo">
    <id column="step_id" jdbcType="INTEGER" property="stepId" />
    <result column="node_id" jdbcType="INTEGER" property="nodeId" />
    <result column="step_name" jdbcType="VARCHAR" property="stepName" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="teller" jdbcType="VARCHAR" property="teller" />
    <result column="org" jdbcType="VARCHAR" property="org" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="delete_flag" jdbcType="INTEGER" property="deleteFlag" />
  </resultMap>
   
  <resultMap type="com.conf.template.db.dto.ConfStepAndFLowInfo" id="StepAndFlowMap">
  	<id column="step_id" property="stepId"/>
  	<id column="step_name" property="stepName"/>
  	<collection property="flowList" select="com.conf.template.db.mapper.ConfFlowInfoMapper.selectBySelective"
  									column="{stepId = step_id}" fetchType="eager"></collection>
  </resultMap>
  
  <resultMap type="com.conf.template.db.dto.ConfProductAndStepAndFLow" id="ConfResultMap">
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="step_id" jdbcType="INTEGER" property="stepId" />
    <result column="flow_id" jdbcType="INTEGER" property="flowId" />
    <result column="teller" jdbcType="VARCHAR" property="teller" />
    <result column="org" jdbcType="VARCHAR" property="org" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <association property="confStepInfo" javaType="com.conf.template.db.model.ConfStepInfo">
            <id property="stepName" column="step_name" />
        </association>
        <association property="confFlowInfo" javaType="com.conf.template.db.model.ConfFlowInfo">
            <id property="flowName" column="flow_name" />
        </association>
    </resultMap>
    <resultMap type="com.conf.template.db.dto.ConfStepInfoDto" id="ConfStepDtoResultMap">
    <result column="step_id" jdbcType="INTEGER" property="stepId" />
    <result column="step_name" jdbcType="VARCHAR" property="stepName" />
        <association property="confNodeInfo" javaType="com.conf.template.db.model.ConfNodeInfo">
            <id property="nodeName" column="node_name" />
            <id property="teller" column="teller" />
            <id property="org" column="org" />
            <id property="createTime" column="create_time" />
        </association>
        <association property="confFlowInfo" javaType="com.conf.template.db.model.ConfFlowInfo">
            <id property="flowId" column="flow_id" />
            <id property="flowName" column="flow_name" />
            <id property="flowPath" column="flow_path" />
        </association>
        <association property="confRuleInfo" javaType="com.conf.template.db.model.ConfRuleInfo">
            <id property="useable" column="useable" />
        </association>
    </resultMap>
  
  <sql id="Base_Column_List">
    step_id, node_id, step_name, remark, teller, org, create_time, update_time, delete_flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from conf_step_info
    where step_id = #{stepId,jdbcType=INTEGER}
  </select>
  
  <select id="selectStepAndFlowInfo" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select step_id, step_name
    from conf_step_info
    where node_id = #{nodeId,jdbcType=INTEGER} and delete_flag = 0
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from conf_step_info
    where step_id = #{stepId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.conf.template.db.model.ConfStepInfo">
    insert into conf_step_info (step_id, node_id, step_name, 
      remark, teller, org, 
      create_time, update_time)
    values (#{stepId,jdbcType=INTEGER}, #{nodeId,jdbcType=INTEGER}, #{stepName,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{teller,jdbcType=VARCHAR}, #{org,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.conf.template.db.model.ConfStepInfo">
     <selectKey resultType="java.lang.Integer" keyProperty="stepId" order="AFTER">
   		SELECT LAST_INSERT_ID()
    </selectKey>
    insert into conf_step_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stepId != null">
        step_id,
      </if>
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="stepName != null">
        step_name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="teller != null">
        teller,
      </if>
      <if test="org != null">
        org,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stepId != null">
        #{stepId,jdbcType=INTEGER},
      </if>
      <if test="nodeId != null">
        #{nodeId,jdbcType=INTEGER},
      </if>
      <if test="stepName != null">
        #{stepName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="teller != null">
        #{teller,jdbcType=VARCHAR},
      </if>
      <if test="org != null">
        #{org,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.conf.template.db.model.ConfStepInfo">
    update conf_step_info
    <set>
      <if test="nodeId != null">
        node_id = #{nodeId,jdbcType=INTEGER},
      </if>
      <if test="stepName != null">
        step_name = #{stepName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="teller != null">
        teller = #{teller,jdbcType=VARCHAR},
      </if>
      <if test="org != null">
        org = #{org,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
    </set>
    where step_id = #{stepId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.conf.template.db.model.ConfStepInfo">
    update conf_step_info
    set node_id = #{nodeId,jdbcType=INTEGER},
      step_name = #{stepName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      teller = #{teller,jdbcType=VARCHAR},
      org = #{org,jdbcType=VARCHAR},
	  delete_flag = #{deleteFlag,jdbcType=INTEGER}
    where step_id = #{stepId,jdbcType=INTEGER}
  </update>
  
  <select id="queryCount" resultType="java.lang.Integer">
  select count(1) 
  from conf_node_info ni, conf_step_info si, conf_flow_info fi
  <where>
      ni.node_id = si.node_id AND si.step_id = fi.step_id 
	  <if test="nodeId!=null and nodeId!=''">
	        and ni.node_id like '%${nodeId}%' 
	   </if>
	   <if test="nodeName!=null and nodeName!=''">
	        and ni.node_name like '%${nodeName}%'
	   </if>
	   <if test="stepId!=null and stepId!=''">
	        and si.step_id = #{stepId}
	   </if>
	   and ni.delete_flag = 0 and si.delete_flag = 0 and fi.delete_flag = 0
   </where>
  </select>
  
 <!--  <select id="queryStep" resultMap="BaseResultMap">
  select t.* from conf_step_info t
  <where>
	  <if test="nodeId!=null and nodeId!=''">
	        and t.node_id like '%${nodeId}%' 
	   </if>
	   <if test="nodeName!=null and nodeName!=''">
	        and t.node_name like '%${nodeName}%'
	   </if>
	   <if test="stepId!=null and stepId!=''">
	        and t.step_id = #{stepId}
	   </if>
   </where>  
   order by t.node_id desc
   limit #{startNum},#{pageSize}
  </select> -->
  <select id="queryStepList" resultMap="BaseResultMap">
  select s.* from conf_step_info s
  <if test="productId!=null and productId!=''">
   , conf_product_step p
  </if>
  <where>
	  <if test="productId!=null and productId!=''">
	   s.step_id = p.step_id and p.product_id = #{productId} and p.delete_flag = 0
	   </if>
	   <if test="nodeId!=null and nodeId!=''">
	        and s.node_id = #{nodeId} and s.delete_flag = 0
	   </if>
   </where>  
  </select>
  
  <select id="queryNodeConfList" resultMap="ConfResultMap">
  select ps.product_id, ps.product_name, si.step_name, fi.flow_name, ps.teller, ps.org, ps.create_time from 
  conf_rule_info r, conf_product_step ps, conf_product_node pn, conf_step_info si, conf_flow_info fi
  <where>
      r.uid = pn.uid and ps.product_id = pn.product_id and ps.step_id = si.step_id and ps.flow_id = fi.flow_id
	  <if test="productId!=null and productId!=''">
	        and ps.product_id = #{productId} 
	   </if>
	   <if test="productName!=null and productName!=''">
	        and ps.product_name = #{productName} 
	   </if>
	   <if test="stepId!=null and stepId!=''">
	        and si.step_id = #{stepId}
	   </if>
	    <if test="useable!=null and useable!=''">
	        and r.useable = #{useable}
	   </if>
	   and r.delete_flag = 0 and ps.delete_flag = 0 and pn.delete_flag = 0 and si.delete_flag = 0 and fi.delete_flag = 0
   </where>  
  </select>
  
  <select id="queryStep" resultMap="ConfStepDtoResultMap">
  	select si.step_id, ni.node_name, si.step_name, fi.flow_id,  fi.flow_name, fi.flow_path, ni.teller, ni.org, ni.create_time
  	from conf_node_info ni, conf_step_info si, conf_flow_info fi
  <where>
      ni.node_id = si.node_id AND si.step_id = fi.step_id 
	  <if test="nodeId!=null and nodeId!=''">
	        and ni.node_id = #{nodeId} 
	   </if>
	   <if test="nodeName!=null and nodeName!=''">
	        and ni.node_name = #{nodeName} 
	   </if>
	   <if test="stepId!=null and stepId!=''">
	        and si.step_id = #{stepId}
	   </if>
	   and ni.delete_flag = 0 and si.delete_flag = 0 and fi.delete_flag = 0
   </where>  
    order by ni.node_id desc
   limit #{startNum},#{pageSize}
  </select>
</mapper>